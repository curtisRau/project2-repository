(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     50924,        991]
NotebookOptionsPosition[     50360,        967]
NotebookOutlinePosition[     50720,        983]
CellTagsIndexPosition[     50677,        980]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"pathToSolutions", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<dataOut/solutionMatrix.csv\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solutions", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"pathToSolutions", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pathToEigenvalues", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<dataOut/eigenvalueArray.csv\>\""}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"eigenvalues", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"pathToEigenvalues", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6668852742340307`*^9, 3.666885292163743*^9}, {
   3.6668854192018547`*^9, 3.666885419963233*^9}, {3.6668854782161207`*^9, 
   3.666885490480033*^9}, 3.6668856232373037`*^9, {3.666886211064527*^9, 
   3.66688632394016*^9}, {3.666887662368647*^9, 3.666887681572699*^9}, 
   3.66698247891346*^9, 3.666983775359417*^9, {3.667070429196167*^9, 
   3.66707043889034*^9}, 3.667230632778524*^9, {3.667230722215693*^9, 
   3.667230739782647*^9}, 3.667231328730665*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HarmonicOscillator\[Psi]", "[", 
    RowBox[{"n_", ",", "x_", ",", "m_", ",", "\[Omega]_", ",", "\[HBar]_"}], 
    "]"}], ":=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"m", " ", "\[Omega]"}], 
       RowBox[{"\[Pi]", " ", "\[HBar]"}]], ")"}], 
     RowBox[{"1", "/", "4"}]], 
    FractionBox["1", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["2", "n"], 
       RowBox[{"n", "!"}]}]]], 
    RowBox[{"HermiteH", "[", 
     RowBox[{"n", ",", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], "x"}]}], "]"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"m", " ", "\[Omega]"}], 
        RowBox[{"2", " ", "\[HBar]"}]]}], 
      SuperscriptBox["x", "2"]}]]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"solutions", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "71"}], "}"}], ",", "1", ",", "500", ",", "1"}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.666886348547716*^9, 3.6668863830751143`*^9}, {
   3.6668864226921253`*^9, 3.666886440313393*^9}, {3.66698203131103*^9, 
   3.66698203595115*^9}, {3.666982222648353*^9, 3.666982226761042*^9}, {
   3.666982409053334*^9, 3.666982412155303*^9}, {3.6669824525479403`*^9, 
   3.6669824681052723`*^9}, {3.6669825447849913`*^9, 3.666982556374217*^9}, {
   3.666982950955595*^9, 3.666982984456712*^9}, {3.666983232626823*^9, 
   3.66698323416873*^9}, 3.666984781177115*^9, {3.6670679744534407`*^9, 
   3.667067975306232*^9}, {3.667230548446974*^9, 3.667230552464965*^9}, {
   3.667231406896678*^9, 3.667231447434807*^9}, {3.667231489499753*^9, 
   3.667231563111507*^9}, {3.66723225088909*^9, 3.667232252910954*^9}, {
   3.6672325098070583`*^9, 3.667232510421239*^9}, {3.667232599092483*^9, 
   3.6672326037646303`*^9}, {3.667232654715913*^9, 3.667232657594108*^9}, {
   3.667232702587988*^9, 3.6672327093447933`*^9}, {3.6675160098634043`*^9, 
   3.667516021144753*^9}, {3.6675160567253103`*^9, 3.667516107190151*^9}, {
   3.667521441354446*^9, 3.667521511146723*^9}, {3.669224498426683*^9, 
   3.669224506670663*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 499, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 71}, 1, 500, 1}}, Typeset`size$$ = {
    360., {109., 113.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$24067$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 71}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$24067$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Part[$CellContext`solutions, $CellContext`i$$], DataRange -> {0, 5}, 
        PlotRange -> Automatic], 
      "Specifications" :> {{{$CellContext`i$$, 71}, 1, 500, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {166., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6669829679580297`*^9, 3.6669829851979856`*^9}, {
   3.666983222244499*^9, 3.666983235008521*^9}, 3.6669834538706627`*^9, 
   3.666984451209931*^9, 3.666984534494925*^9, 3.666984781789482*^9, 
   3.66706796870998*^9, 3.667068184762995*^9, {3.6670685469314203`*^9, 
   3.667068552254209*^9}, 3.6672305561115103`*^9, 3.66723129761668*^9, 
   3.667231407475506*^9, 3.6672314483661957`*^9, {3.6672314925957413`*^9, 
   3.6672315635563383`*^9}, 3.6672322536358557`*^9, 3.667232449025473*^9, 
   3.667232511135889*^9, 3.667232604458371*^9, 3.667232658328064*^9, 
   3.667232711030015*^9, {3.667516015296669*^9, 3.667516021972663*^9}, {
   3.667516057681082*^9, 3.6675160765984383`*^9}, 3.667516108312684*^9, 
   3.667521449355616*^9, {3.667521489940078*^9, 3.667521511939089*^9}, 
   3.6692244326586027`*^9, 3.669224529640067*^9}]
}, Open  ]],

Cell[TextData[{
 "For N = 750, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 5.0"
}], "Text",
 CellChangeTimes->{{3.667516147570031*^9, 3.667516168060164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"solutions", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"172", ",", "171", ",", "499"}], "}"}]}], "}"}]}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "15"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "15"}], "}"}], ",", "All"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=1\>\"", ",", "\"\<n=2\>\"", ",", "\"\<n=3\>\""}], "}"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Lowest Solutions for \[Omega]=0.1\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.667516179547494*^9, 3.667516322527196*^9}, {
  3.667516447069653*^9, 3.66751647305309*^9}, {3.6675165113388977`*^9, 
  3.6675165422128563`*^9}, {3.6692242983428802`*^9, 3.66922430564331*^9}, {
  3.669224339301322*^9, 3.669224392173785*^9}, {3.66922458702509*^9, 
  3.669224675461339*^9}, {3.66922472019829*^9, 3.66922477009925*^9}, {
  3.669225022616241*^9, 3.66922503587868*^9}, {3.669225200669141*^9, 
  3.669225263316041*^9}, {3.6692252990270452`*^9, 3.669225339991969*^9}, {
  3.6692253771113873`*^9, 3.6692253773995132`*^9}, {3.66922543364532*^9, 
  3.669225433956127*^9}, {3.669225470887231*^9, 3.669225527555504*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Vw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1mXk8lF8bxm3Z933fxz6ilFJzzk0bUkiKVMiSpSzZmaJU2lCSQovyypL2
RaVEIhEqKSVCkbShJEq988xzfv3TZz5jnjnnXq7re6GzIXxFAB8PD88PXh4e
6v///kVUFnfFrN6Aj/L77ZJvOIm7SsUZ+/v+e30B79lvnW4f7ocv24n6SylW
YM9vPp6FU37k/Sp8/ty6sP3p/hj1rWsTZ9Xi7hy+y8OaAeTnH+J2vMe/4XIA
1i+88UPmWyNuF/tzaXxRIPl8C67bm/MqqjMQT7sitH+/y1Mc87LB33DLRvK8
Nvw4temIkGgQjpe9ppZh3I6lfpzLnjgTRJ7/Eh/7ixZ/mR+Mh7b4lB/ke4Uf
JHhmPnsZTL7vNXaQLZq7NyoEr+c87XDnG5wvVTUgJh1Kvr8bT724zLlEKB7M
fTPguKYHX21O/yiydBM5Ty8u2rGvzPvjJqzbOGP648V9eN8Z1ybtPZvJ+d5h
y6Urn1kbhmGvyT1xy2a+x8F5/Isz68PIeftxZqCVmFJgOM42eXuvRWsAM80b
Yl7yRZDzf8CPnR7cKFgRgVvWzBJ2ER/E9bZH3nieiSD3+Ygd44teTY5EYGGq
Or8+4okzv21jbSPJ/YZwTPTJ0qqDkdiusvfYiv5PuCip3u3R20hy38/YNDTx
+R7zLTjpk3Vv29Mv+NvT0bBR9hZy/6/48IbZFb8at2DqtO5V33BF61LbDOUo
Uo9hvH/niX9lAVF4nDE6J7R9GAev5nmJrkSR+ozguS/LRfHfKCyPNLrONY3g
1a/jkvMdokm9RvFIU5OhU3Y0tlhlv/1zzSguWX/x6ILuaFK/71hzkbFftGEM
XhYWxWDe/I5tJLc0t4XHkHr+wKc2HQxZWRGDQ3affLT5wg9s9e3O1k9TMaS+
Y7hX38IxY0EsTqPe/t8Y5n1fdc1sTyyp908sHD3Nu6YpFnPLlfcTH0sT7UKS
caT+4zj3vOCWPOc4XN2idWP6oXE8x9Vf+nFmHOnHL/zM/tfx2pY43MWpRkTa
L5z1z0w0QTye9GcCl/ZscnxvH48n/sb8vbR1AlecrBoZT40n/ZrAhQ1rFpTe
jceKSqfPjERN4ndFXT2jY/Gkf5N4XV2yRKNZAp7JqdaMkN944nqCuP6GBNLP
33igb9aTX0cSsPOScc5X/sE5h10m7RoSSH//4PLEJ5pjvxLwJm/dzKurpnBf
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 15}, {0, 0.00981313}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, Method -> {}, PlotLabel -> 
     FormBox["\"Lowest Solutions for \[Omega]=0.1\"", TraditionalForm], 
     PlotRange -> {{0, 15}, {0, 0.00981313}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"n=1\"", "\"n=2\"", "\"n=3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6675162578421707`*^9, 3.6675163233768883`*^9}, {
   3.667516450165464*^9, 3.6675164744861717`*^9}, {3.667516512222457*^9, 
   3.667516542807942*^9}, {3.669224299954137*^9, 3.669224307348365*^9}, {
   3.669224343523704*^9, 3.6692243928022137`*^9}, {3.669224573718493*^9, 
   3.669224641667302*^9}, 3.669224675937531*^9, 3.669224780066678*^9, {
   3.669225000600358*^9, 3.669225037862157*^9}, 3.669225101205159*^9, {
   3.669225203233028*^9, 3.6692252640508223`*^9}, {3.6692253007200127`*^9, 
   3.669225340433053*^9}, 3.669225379261351*^9, 3.669225447393866*^9, {
   3.669225516446805*^9, 3.669225528186202*^9}}]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{157, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1383, 34, 80, "Input"],
Cell[1944, 56, 895, 30, 59, "Input"],
Cell[CellGroupData[{
Cell[2864, 90, 1705, 32, 80, "Input"],
Cell[4572, 124, 2480, 45, 354, "Output"]
}, Open  ]],
Cell[7067, 172, 234, 8, 32, "Text"],
Cell[CellGroupData[{
Cell[7326, 184, 1672, 38, 131, "Input"],
Cell[9001, 224, 41343, 740, 273, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
